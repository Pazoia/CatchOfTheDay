{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","base.js","keepSafe.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","console","log","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","handleClick","addToOrder","details","src","alt","disabled","App","fishesCopy","Date","now","smapleFishes","orderCopy","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.0a203eb6.chunk.js","sourcesContent":["export function formatPrice(cents) {\n    return (cents / 100).toLocaleString(\"en-UK\", {\n        style: \"currency\",\n        currency: \"GBP\",\n    });\n}\n\nexport function rando(arr) {\n    return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n    return text\n        .toString()\n        .toLowerCase()\n        .replace(/\\s+/g, \"-\")\n        .replace(/[^\\w-]+/g, \"\")\n        .replace(/--+/g, \"-\")\n        .replace(/^-+/, \"\")\n        .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n    const adjectives = [\n        \"adorable\",\n        \"beautiful\",\n        \"clean\",\n        \"drab\",\n        \"elegant\",\n        \"fancy\",\n        \"glamorous\",\n        \"handsome\",\n        \"long\",\n        \"magnificent\",\n        \"old-fashioned\",\n        \"plain\",\n        \"quaint\",\n        \"sparkling\",\n        \"ugliest\",\n        \"unsightly\",\n        \"angry\",\n        \"bewildered\",\n        \"clumsy\",\n        \"defeated\",\n        \"embarrassed\",\n        \"fierce\",\n        \"grumpy\",\n        \"helpless\",\n        \"itchy\",\n        \"jealous\",\n        \"lazy\",\n        \"mysterious\",\n        \"nervous\",\n        \"obnoxious\",\n        \"panicky\",\n        \"repulsive\",\n        \"scary\",\n        \"thoughtless\",\n        \"uptight\",\n        \"worried\",\n    ];\n\n    const nouns = [\n        \"women\",\n        \"men\",\n        \"children\",\n        \"teeth\",\n        \"feet\",\n        \"people\",\n        \"leaves\",\n        \"mice\",\n        \"geese\",\n        \"halves\",\n        \"knives\",\n        \"wives\",\n        \"lives\",\n        \"elves\",\n        \"loaves\",\n        \"potatoes\",\n        \"tomatoes\",\n        \"cacti\",\n        \"foci\",\n        \"fungi\",\n        \"nuclei\",\n        \"syllabuses\",\n        \"analyses\",\n        \"diagnoses\",\n        \"oases\",\n        \"theses\",\n        \"crises\",\n        \"phenomena\",\n        \"criteria\",\n        \"data\",\n    ];\n\n    return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","/* eslint-disable react/static-property-placement */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { getFunName } from \"../helpers\";\n\nclass StorePicker extends React.Component {\n    static propTypes = {\n        history: PropTypes.object,\n    };\n    myInput = React.createRef();\n\n    goToStore = (event) => {\n        // 1 - Stop the form from submitting\n        event.preventDefault();\n        // 2 - Get the text from that input\n        const storeName = this.myInput.current.value;\n        // 3-Change the page to /store/whatever-store-name\n        this.props.history.push(`/store/${storeName}`);\n    };\n\n    render() {\n        return (\n            <form className=\"store-selector\" onSubmit={this.goToStore}>\n                <h2>Please Enter A Store</h2>\n                {/* eslint-disable-next-line prettier/prettier */}\n                <input \n                    type=\"text\"\n                    ref={this.myInput}\n                    required placeholder=\"Store Name\"\n                    defaultValue={getFunName()}\n                />\n                <button type=\"submit\">Visit Store →</button>\n            </form>\n        );\n    }\n}\n\nexport default StorePicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Stateless functional component\n// with implicit return\nconst Header = (props) => (\n    <header className=\"top\">\n        <h1>\n            Catch\n            <span className=\"ofThe\">\n                <span className=\"of\">Of</span>\n                <span className=\"the\">The</span>\n            </span>\n            Day\n        </h1>\n        <h3 className=\"tagline\">\n            <span>{props.tagline}</span>\n        </h3>\n    </header>\n);\n\nHeader.propTypes = {\n    tagline: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","/* eslint-disable react/static-property-placement */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from \"react\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport PropTypes from \"prop-types\";\n\nimport { formatPrice } from \"../helpers\";\n\nclass Order extends React.Component {\n    static propTypes = {\n        fishes: PropTypes.object,\n        order: PropTypes.object,\n        removeFromOrder: PropTypes.func,\n    };\n    renderOrder = (key) => {\n        const fish = this.props.fishes[key];\n        const count = this.props.order[key];\n        const isAvailable = fish && fish.status === \"available\";\n        const transitionOptions = {\n            classNames: \"order\",\n            key,\n            timeout: { enter: 250, exit: 250 },\n        };\n\n        // Make sure the fish is loaded before reinstating order cart\n        if (!fish) return null;\n\n        if (!isAvailable) {\n            return (\n                <CSSTransition {...transitionOptions}>\n                    <li key={key}>{fish ? fish.name : \"fish\"} is no longer available</li>\n                </CSSTransition>\n            );\n        }\n        return (\n            <CSSTransition {...transitionOptions}>\n                <li key={key}>\n                    <span>\n                        <TransitionGroup component=\"span\" className=\"count\">\n                            {/* eslint-disable-next-line prettier/prettier */}\n                            <CSSTransition\n                                classNames=\"count\"\n                                key={count}\n                                timeout={{ enter: 250, exit: 250 }}>\n                                <span>{count}</span>\n                            </CSSTransition>\n                        </TransitionGroup>\n                        lbs {fish.name}\n                        {formatPrice(count * fish.price)}\n                        <button type=\"submit\" onClick={() => this.props.removeFromOrder(key)}>\n                            &times;\n                        </button>\n                    </span>\n                </li>\n            </CSSTransition>\n        );\n    };\n    render() {\n        const orderIds = Object.keys(this.props.order);\n        const total = orderIds.reduce((prevTotal, key) => {\n            const fish = this.props.fishes[key];\n            const count = this.props.order[key];\n            const isAvailable = fish && fish.status === \"available\";\n            if (isAvailable) {\n                return prevTotal + count * fish.price;\n            }\n            return prevTotal;\n        }, 0);\n\n        return (\n            <div className=\"order-wrap\">\n                <h2>Order</h2>\n                <TransitionGroup component=\"ul\" className=\"order\">\n                    {orderIds.map(this.renderOrder)}\n                </TransitionGroup>\n                <div className=\"total\">\n                    <strong>Total: {formatPrice(total)}</strong>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Order;\n","import Rebase from \"re-base\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\n\nimport firebaseApiKey from \"./keepSafe\";\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: firebaseApiKey,\n    authDomain: \"catch-of-the-day-paulo-azoia.firebaseapp.com\",\n    databaseURL: \"https://catch-of-the-day-paulo-azoia-default-rtdb.europe-west1.firebasedatabase.app\",\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// This is a named export\nexport { firebaseApp };\n\n// This is a default export\nexport default base;\n","const firebaseApiKey = \"AIzaSyCKj4Jt4QhjOMK1MvrZELHkIavkDdoUhEE\";\n\nexport default firebaseApiKey;\n","/* eslint-disable react/static-property-placement */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass AddFishForm extends React.Component {\n    nameRef = React.createRef();\n    priceRef = React.createRef();\n    statusRef = React.createRef();\n    descRef = React.createRef();\n    imageRef = React.createRef();\n\n    static propTypes = {\n        addFish: PropTypes.func,\n    };\n\n    createFish = (event) => {\n        // 1 - Stop the form from submitting\n        event.preventDefault();\n        const fish = {\n            name: this.nameRef.current.value,\n            price: parseFloat(this.priceRef.current.value),\n            status: this.statusRef.current.value,\n            desc: this.descRef.current.value,\n            image: this.imageRef.current.value,\n        };\n        this.props.addFish(fish);\n        // reset the form\n        event.currentTarget.reset();\n    };\n\n    render() {\n        return (\n            <form className=\"fish-edit\" onSubmit={this.createFish}>\n                <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n                <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" />\n                <select name=\"status\" ref={this.statusRef}>\n                    <option value=\"available\">Fresh!</option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select>\n                <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n                <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\n                <button type=\"submit\">+ Add Fish</button>\n            </form>\n        );\n    }\n}\n\nexport default AddFishForm;\n","/* eslint-disable react/static-property-placement */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass EditFishForm extends React.Component {\n    static propTypes = {\n        fish: PropTypes.shape({\n            name: PropTypes.string,\n            status: PropTypes.string,\n            desc: PropTypes.string,\n            image: PropTypes.string,\n            price: PropTypes.number,\n        }),\n        updateFish: PropTypes.func,\n        deleteFish: PropTypes.func,\n        index: PropTypes.string,\n    };\n\n    handleChange = (event) => {\n        // Take a copy of the current fish\n        // Update the property that was changed\n        const updatedFish = {\n            ...this.props.fish,\n            [event.currentTarget.name]: event.currentTarget.value,\n        };\n        this.props.updateFish(this.props.index, updatedFish);\n    };\n    render() {\n        return (\n            <div className=\"fish-edit\">\n                <input type=\"text\" name=\"name\" onChange={this.handleChange} value={this.props.fish.name} />\n                <input type=\"text\" name=\"price\" onChange={this.handleChange} value={this.props.fish.price} />\n                <select type=\"text\" name=\"status\" onChange={this.handleChange} value={this.props.fish.status}>\n                    <option value=\"available\">Fresh!</option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select>\n                <textarea name=\"desc\" onChange={this.handleChange} value={this.props.fish.desc} />\n                <input type=\"text\" name=\"image\" onChange={this.handleChange} value={this.props.fish.image} />\n                <button type=\"submit\" onClick={() => this.props.deleteFish(this.props.index)}>\n                    Remove Fish\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default EditFishForm;\n","/* eslint-disable react/no-this-in-sfc */\n/* eslint-disable prettier/prettier */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Login = (props) => (\n    <nav className=\"login\">\n        <h2>Inventory Login</h2>\n        <p>Sign in to manage your store's inventory.</p>\n        <button\n            type=\"submit\"\n            className=\"github\"\n            onClick={() => props.authenticate(\"Github\")}\n        >\n            Log In With GitHub\n        </button>\n        <button\n            type=\"submit\"\n            className=\"twitter\"\n            onClick={() => props.authenticate(\"Twitter\")}\n        >\n            Log In With Twitter\n        </button>\n        <button\n            type=\"submit\"\n            className=\"facebook\"\n            onClick={() => props.authenticate(\"Facebook\")}\n        >\n            Log In With Facebook\n        </button>\n    </nav>\n);\n\nLogin.propTypes = {\n    authenticate: PropTypes.func.isRequired\n};\n\nexport default Login;\n","/* eslint-disable */\n/* eslint-disable react/static-property-placement */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport base, { firebaseApp } from \"../base\";\n\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\n\nclass Inventory extends React.Component {\n    static propTypes = {\n        fishes: PropTypes.object,\n        addFish: PropTypes.func,\n        updateFish: PropTypes.func,\n        deleteFish: PropTypes.func,\n        loadSampleFishes: PropTypes.func,\n        storeId: PropTypes.string,\n    };\n\n    state = {\n        uid: null,\n        owner: null,\n    };\n\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                this.authHandler({ user });\n            }\n        })\n    }\n\n    authHandler = async (authData) => {\n        // 1 - Look up the current store in the firebase database\n        const store = await base.fetch(this.props.storeId, { context: this });\n        // 2 - Claim it if there's no owner\n        if (!store.owner) {\n            // save it as our own\n            await base.post(`${this.props.storeId}/owner`, {\n                data: authData.user.uid\n            });\n        }\n        // 3 - Set the state of the inventory component to reflect the current user\n        this.setState({\n            uid: authData.user.uid,\n            owner: store.owner || authData.user.uid\n        });\n    };\n\n    authenticate = (provider) => {\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n        firebaseApp\n            .auth()\n            .signInWithPopup(authProvider)\n            .then(this.authHandler);\n    };\n\n    logout = async () => {\n        console.log(\"Logging out\");\n        await firebase.auth().signOut();\n        this.setState({ uid: null });\n    };\n\n    render() {\n        const logout = <button type=\"button\" onClick={this.logout}>Log Out!</button>;\n\n        // 1 - Check if store owner is logged in\n        if (!this.state.uid) {\n            return <Login authenticate={this.authenticate} />;\n        }\n\n        // 2 - Check if they are not the owner of the store\n        if (this.state.uid !== this.state.owner) {\n            return(\n                <div>\n                    <p>Sorry, you are not the owner!</p>\n                    {logout}\n                </div>\n            );\n        }\n\n        // Render the inventory if user is the store owner\n        return (\n            <div className=\"inventory\">\n                <h2>Inventory</h2>\n                {logout}\n                {Object.keys(this.props.fishes).map((key) => (\n                    // eslint-disable-next-line prettier/prettier\n                    <EditFishForm \n                        key={key}\n                        index={key}\n                        fish={this.props.fishes[key]}\n                        updateFish={this.props.updateFish}\n                        deleteFish={this.props.deleteFish}\n                    />\n                ))}\n                <AddFishForm addFish={this.props.addFish} />\n                <button type=\"submit\" onClick={this.props.loadSampleFishes}>\n                    Load Sample Fishes\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n    fish1: {\n        name: \"Pacific Halibut\",\n        image: \"/images/hali.jpg\",\n        desc: \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n        price: 1724,\n        status: \"available\",\n    },\n\n    fish2: {\n        name: \"Lobster\",\n        image: \"/images/lobster.jpg\",\n        desc: \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n        price: 3200,\n        status: \"available\",\n    },\n\n    fish3: {\n        name: \"Sea Scallops\",\n        image: \"/images/scallops.jpg\",\n        desc: \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n        price: 1684,\n        status: \"unavailable\",\n    },\n\n    fish4: {\n        name: \"Mahi Mahi\",\n        image: \"/images/mahi.jpg\",\n        desc: \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n        price: 1129,\n        status: \"available\",\n    },\n\n    fish5: {\n        name: \"King Crab\",\n        image: \"/images/crab.jpg\",\n        desc: \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n        price: 4234,\n        status: \"available\",\n    },\n\n    fish6: {\n        name: \"Atlantic Salmon\",\n        image: \"/images/salmon.jpg\",\n        desc: \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n        price: 1453,\n        status: \"available\",\n    },\n\n    fish7: {\n        name: \"Oysters\",\n        image: \"/images/oysters.jpg\",\n        desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n        price: 2543,\n        status: \"available\",\n    },\n\n    fish8: {\n        name: \"Mussels\",\n        image: \"/images/mussels.jpg\",\n        desc: \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n        price: 425,\n        status: \"available\",\n    },\n\n    fish9: {\n        name: \"Jumbo Prawns\",\n        image: \"/images/prawns.jpg\",\n        desc: \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n        price: 2250,\n        status: \"available\",\n    },\n};\n\nexport default fishes;\n","/* eslint-disable react/static-property-placement */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { formatPrice } from \"../helpers\";\n\nclass Fish extends React.Component {\n    static propTypes = {\n        details: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            desc: PropTypes.string,\n            status: PropTypes.string,\n            price: PropTypes.number,\n        }),\n        addToOrder: PropTypes.func,\n        index: PropTypes.string,\n    };\n\n    handleClick = () => {\n        this.props.addToOrder(this.props.index);\n    };\n\n    render() {\n        // eslint-disable-next-line no-unused-vars\n        const { image, name, price, desc, status } = this.props.details;\n        const isAvailable = status === \"available\";\n        return (\n            <li className=\"menu-fish\">\n                <img src={image} alt={name} />\n                <h3 className=\"fish-name\">\n                    {name}\n                    <span className=\"price\">{formatPrice(price)}</span>\n                </h3>\n                <p>{desc}</p>\n                <button type=\"submit\" disabled={!isAvailable} onClick={this.handleClick}>\n                    {isAvailable ? \"Add To Cart\" : \"Sold Out!\"}\n                </button>\n            </li>\n        );\n    }\n}\n\nexport default Fish;\n","/* eslint-disable react/static-property-placement */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport smapleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\n\nclass App extends React.Component {\n    state = {\n        fishes: {},\n        order: {},\n    };\n\n    static propTypes = {\n        match: PropTypes.object,\n    };\n\n    componentDidMount() {\n        const { params } = this.props.match;\n        // first reinstate our localStorage\n        const localStorageRef = localStorage.getItem(params.storeId);\n        if (localStorageRef) {\n            this.setState({\n                order: JSON.parse(localStorageRef),\n            });\n        }\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\n            context: this,\n            state: \"fishes\",\n        });\n    }\n\n    componentDidUpdate() {\n        // eslint-disable-next-line prettier/prettier\n        localStorage.setItem(\n            this.props.match.params.storeId,\n            JSON.stringify(this.state.order),\n        ); \n    }\n\n    componentWillUnmount() {\n        base.removeBinding(this.ref);\n    }\n\n    addFish = (fish) => {\n        // 1 - Take a copy of the existing state\n        const fishesCopy = { ...this.state.fishes };\n\n        // 2 - Add our new fish to that fishes variable\n        fishesCopy[`fish${Date.now()}`] = fish;\n\n        // 3 - Set the new fishes object to state\n        this.setState({\n            fishes: fishesCopy,\n        });\n    };\n\n    updateFish = (key, updatedFish) => {\n        // 1 - Take a copy of the current state\n        const fishesCopy = { ...this.state.fishes };\n\n        // 2 - Update that state\n        fishesCopy[key] = updatedFish;\n\n        // 3 - Set new values to state\n        this.setState({\n            fishes: fishesCopy,\n        });\n    };\n\n    deleteFish = (key) => {\n        // 1 - Take a copy of current state\n        const fishesCopy = { ...this.state.fishes };\n\n        // 2 - Update the state\n        fishesCopy[key] = null;\n\n        // 3 - Set new values to state\n        this.setState({\n            fishes: fishesCopy,\n        });\n    };\n\n    loadSampleFishes = () => {\n        this.setState({\n            fishes: smapleFishes,\n        });\n    };\n\n    addToOrder = (key) => {\n        // 1 - Take a copy of state\n        const orderCopy = { ...this.state.order };\n        // 2 - Either add to the order, or update the number in our order\n        orderCopy[key] = orderCopy[key] + 1 || 1;\n        // 3 - Call setState to update our state object\n        this.setState({\n            order: orderCopy,\n        });\n    };\n\n    removeFromOrder = (key) => {\n        // 1 - Take a copy of current state\n        const orderCopy = { ...this.state.order };\n\n        // 2 - Remove item from order\n        delete orderCopy[key];\n\n        // 3 - Update state\n        this.setState({\n            order: orderCopy,\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"catch-of-the-day\">\n                <div className=\"menu\">\n                    <Header tagline=\"Fresh Seafood Market\" />\n                    <ul className=\"fishes\">\n                        {Object.keys(this.state.fishes).map((key) => (\n                            <Fish key={key} index={key} details={this.state.fishes[key]} addToOrder={this.addToOrder} />\n                        ))}\n                    </ul>\n                </div>\n                {/* eslint-disable-next-line prettier/prettier */}\n                <Order \n                    fishes={this.state.fishes}\n                    order={this.state.order}\n                    removeFromOrder={this.removeFromOrder}\n                />\n                {/* eslint-disable-next-line prettier/prettier */}\n                <Inventory \n                    addFish={this.addFish}\n                    updateFish={this.updateFish}\n                    deleteFish={this.deleteFish}\n                    loadSampleFishes={this.loadSampleFishes}\n                    fishes={this.state.fishes}\n                    storeId={this.props.match.params.storeId}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\n\nconst NotFound = () => (\n    <div>\n        <h2>Page Not Found!!!</h2>\n    </div>\n);\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport StorePicker from \"./StorePicker\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\";\n\nconst Router = () => (\n    <BrowserRouter>\n        <Switch>\n            <Route exact path=\"/\" component={StorePicker} />\n            <Route path=\"/store/:storeId\" component={App} />\n            <Route component={NotFound} />\n        </Switch>\n    </BrowserRouter>\n);\n\nexport default Router;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport \"./css/style.css\";\n\nimport Router from \"./components/Router\";\n\nrender(<Router />, document.querySelector(\"#main\"));\n"],"sourceRoot":""}